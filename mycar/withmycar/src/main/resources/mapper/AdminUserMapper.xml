<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.withmycar.mapper.AdminUserMapper" >
  <resultMap id="BaseResultMap" type="com.qf.withmycar.pojo.AdminUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="is_super" property="isSuper" jdbcType="TINYINT" />
    <result column="consumer" property="consumer" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="dept" property="dept" jdbcType="VARCHAR" />
  </resultMap>
  <!--根据useranme查角色权限-->
  <select id="selectUsernameQuanxian" parameterType="string" resultType="com.qf.withmycar.dto.AdminMenuAuthDto">
        select
         ma.id id,
		 ma.name name,
		 ma.status status,
		 ma.sort sort,
         ma.parent_id pid,
         ma.classname icon,
         ma.url url
         from
         admin_menu_auth ma,
         admin_role r,
         admin_role_menu rm,
         admin_user u,
         admin_user_role ur

         where
             ma.id=rm.menu_id
         and rm.role_id= r.id
         and r.id=ur.role_id
         and ur.user_id=u.id
         and u.username=#{username}
    </select>
<!--根据username查所有-->
  <select id="findUserByUsername" parameterType="string" resultType="com.qf.withmycar.pojo.AdminUser">
            SELECT * FROM admin_user WHERE username=#{username}
    </select>

  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, name, salt, phone, email, status, create_time, is_super, 
    consumer, remark, dept
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from admin_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.withmycar.pojo.AdminUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into admin_user (id, username, password, 
      name, salt, phone, 
      email, status, create_time, 
      is_super, consumer, remark, 
      dept)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=INTEGER}, 
      #{isSuper,jdbcType=TINYINT}, #{consumer,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{dept,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.withmycar.pojo.AdminUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isSuper != null" >
        is_super,
      </if>
      <if test="consumer != null" >
        consumer,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="dept != null" >
        dept,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isSuper != null" >
        #{isSuper,jdbcType=TINYINT},
      </if>
      <if test="consumer != null" >
        #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.withmycar.pojo.AdminUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update admin_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isSuper != null" >
        is_super = #{isSuper,jdbcType=TINYINT},
      </if>
      <if test="consumer != null" >
        consumer = #{consumer,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="dept != null" >
        dept = #{dept,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.withmycar.pojo.AdminUser" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update admin_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      is_super = #{isSuper,jdbcType=TINYINT},
      consumer = #{consumer,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getur" resultType="com.qf.withmycar.dto.AdminUserDto">
    select
    u.id,
    u.username,
    u.name,
    r.name rname
    from
    admin_user u,
    admin_role r,
    admin_user_role ur
    where
    r.id=ur.role_id
    and ur.user_id=u.id
    and u.status=1
  </select>

  <update id="updatestatus" parameterType="int">
      update admin_user set status=0 where id=#{id}
  </update>
  <!--模糊查询-->
<select id="mohuchaAdminUserRole" parameterType="com.qf.withmycar.vo.AdminUserRoleVo" resultType="com.qf.withmycar.vo.AdminUserRoleVo">
    select
    distinct u.id,
    u.username,
    u.name,
    r.name rname
    from
    admin_user u,
    admin_role r,
    admin_user_role ur
    where
    r.id=ur.role_id
    and ur.role_id=u.id
  <if test="username != null and username!=''" >
    and u.username like CONCAT('%', #{username}, '%')
  </if>
  <if test="js!=null and js!=''">
    and r.name like CONCAT('%', #{js}, '%')
  </if>
</select>
    <!--增加管理中间表-->
    <insert id="insertAdminUserRole" parameterType="com.qf.withmycar.pojo.AdminUserRole" >
        insert into admin_user_role ( user_id, role_id
        )
        values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
        )
    </insert>
    <!--查询新增管理的id-->
    <select id="selectAdeminUser" parameterType="String" resultType="int">
        select id from admin_user where username=#{username}

    </select>
  <!--新增管理员-->
  <insert id="insertAll" parameterType="com.qf.withmycar.pojo.AdminUser">

    insert into admin_user(username,password,name,salt,phone,email,create_time,is_super,consumer,remark,dept) values
   (#{username},#{password},#{name},#{salt},#{phone},#{email},#{create_time},#{isSuper},#{consumer},#{remark},#{dept})
  </insert>
<!--修改查询-->
  <select id="xungaichaxun" parameterType="int" resultType="com.qf.withmycar.pojo.AdminUser">

    select username,password,is_Super isSuper,name,dept,phone,email,remark from admin_user where id=#{id}
  </select>
  <!--修改管理员-->
  <update id="updateAdminUser" parameterType="com.qf.withmycar.pojo.AdminUser">
          update admin_user set username=#{username},password=#{password},is_super=#{isSuper},name=#{name},dept=#{dept},phone=#{phone},email=#{email},remark=#{remark} where id=#{id}
  </update>
  <!--查询权限中间表-->
  <select id="selectzhongjian" resultType="int" parameterType="int">
      select id from admin_user_role where user_id=#{id}
  </select>
<!--修改权限中间表-->
  <update id="updatezhaonghian" parameterType="com.qf.withmycar.vo.AdminUserRoleVo">
    update admin_user_role set user_id=#{userid},role_id=#{roleid} where id=#{idzj}
  </update>

  <!--根据username获取id及name-->
  <select id="selectIdAndName" resultType="com.qf.withmycar.pojo.AdminUser" parameterType="string">
      select id,name from admin_user where username=#{username}
  </select>
</mapper>